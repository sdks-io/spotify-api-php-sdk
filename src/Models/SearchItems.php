<?php

declare(strict_types=1);

/*
 * SpotifyWebAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SpotifyWebAPILib\Models;

use stdClass;

class SearchItems implements \JsonSerializable
{
    /**
     * @var PagingTrackObject|null
     */
    private $tracks;

    /**
     * @var PagingArtistObject|null
     */
    private $artists;

    /**
     * @var PagingSimplifiedAlbumObject|null
     */
    private $albums;

    /**
     * @var PagingPlaylistObject|null
     */
    private $playlists;

    /**
     * @var PagingSimplifiedShowObject|null
     */
    private $shows;

    /**
     * @var PagingSimplifiedEpisodeObject|null
     */
    private $episodes;

    /**
     * @var PagingSimplifiedAudiobookObject|null
     */
    private $audiobooks;

    /**
     * Returns Tracks.
     */
    public function getTracks(): ?PagingTrackObject
    {
        return $this->tracks;
    }

    /**
     * Sets Tracks.
     *
     * @maps tracks
     */
    public function setTracks(?PagingTrackObject $tracks): void
    {
        $this->tracks = $tracks;
    }

    /**
     * Returns Artists.
     */
    public function getArtists(): ?PagingArtistObject
    {
        return $this->artists;
    }

    /**
     * Sets Artists.
     *
     * @maps artists
     */
    public function setArtists(?PagingArtistObject $artists): void
    {
        $this->artists = $artists;
    }

    /**
     * Returns Albums.
     */
    public function getAlbums(): ?PagingSimplifiedAlbumObject
    {
        return $this->albums;
    }

    /**
     * Sets Albums.
     *
     * @maps albums
     */
    public function setAlbums(?PagingSimplifiedAlbumObject $albums): void
    {
        $this->albums = $albums;
    }

    /**
     * Returns Playlists.
     */
    public function getPlaylists(): ?PagingPlaylistObject
    {
        return $this->playlists;
    }

    /**
     * Sets Playlists.
     *
     * @maps playlists
     */
    public function setPlaylists(?PagingPlaylistObject $playlists): void
    {
        $this->playlists = $playlists;
    }

    /**
     * Returns Shows.
     */
    public function getShows(): ?PagingSimplifiedShowObject
    {
        return $this->shows;
    }

    /**
     * Sets Shows.
     *
     * @maps shows
     */
    public function setShows(?PagingSimplifiedShowObject $shows): void
    {
        $this->shows = $shows;
    }

    /**
     * Returns Episodes.
     */
    public function getEpisodes(): ?PagingSimplifiedEpisodeObject
    {
        return $this->episodes;
    }

    /**
     * Sets Episodes.
     *
     * @maps episodes
     */
    public function setEpisodes(?PagingSimplifiedEpisodeObject $episodes): void
    {
        $this->episodes = $episodes;
    }

    /**
     * Returns Audiobooks.
     */
    public function getAudiobooks(): ?PagingSimplifiedAudiobookObject
    {
        return $this->audiobooks;
    }

    /**
     * Sets Audiobooks.
     *
     * @maps audiobooks
     */
    public function setAudiobooks(?PagingSimplifiedAudiobookObject $audiobooks): void
    {
        $this->audiobooks = $audiobooks;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->tracks)) {
            $json['tracks']     = $this->tracks;
        }
        if (isset($this->artists)) {
            $json['artists']    = $this->artists;
        }
        if (isset($this->albums)) {
            $json['albums']     = $this->albums;
        }
        if (isset($this->playlists)) {
            $json['playlists']  = $this->playlists;
        }
        if (isset($this->shows)) {
            $json['shows']      = $this->shows;
        }
        if (isset($this->episodes)) {
            $json['episodes']   = $this->episodes;
        }
        if (isset($this->audiobooks)) {
            $json['audiobooks'] = $this->audiobooks;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}

<?php

declare(strict_types=1);

/*
 * SpotifyWebAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SpotifyWebAPILib\Models;

use stdClass;

class TimeIntervalObject implements \JsonSerializable
{
    /**
     * @var float|null
     */
    private $start;

    /**
     * @var float|null
     */
    private $duration;

    /**
     * @var float|null
     */
    private $confidence;

    /**
     * Returns Start.
     * The starting point (in seconds) of the time interval.
     */
    public function getStart(): ?float
    {
        return $this->start;
    }

    /**
     * Sets Start.
     * The starting point (in seconds) of the time interval.
     *
     * @maps start
     */
    public function setStart(?float $start): void
    {
        $this->start = $start;
    }

    /**
     * Returns Duration.
     * The duration (in seconds) of the time interval.
     */
    public function getDuration(): ?float
    {
        return $this->duration;
    }

    /**
     * Sets Duration.
     * The duration (in seconds) of the time interval.
     *
     * @maps duration
     */
    public function setDuration(?float $duration): void
    {
        $this->duration = $duration;
    }

    /**
     * Returns Confidence.
     * The confidence, from 0.0 to 1.0, of the reliability of the interval.
     */
    public function getConfidence(): ?float
    {
        return $this->confidence;
    }

    /**
     * Sets Confidence.
     * The confidence, from 0.0 to 1.0, of the reliability of the interval.
     *
     * @maps confidence
     */
    public function setConfidence(?float $confidence): void
    {
        $this->confidence = $confidence;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->start)) {
            $json['start']      = $this->start;
        }
        if (isset($this->duration)) {
            $json['duration']   = $this->duration;
        }
        if (isset($this->confidence)) {
            $json['confidence'] = $this->confidence;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}

<?php

declare(strict_types=1);

/*
 * SpotifyWebAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SpotifyWebAPILib\Models;

use stdClass;

class ExplicitContentSettingsObject implements \JsonSerializable
{
    /**
     * @var bool|null
     */
    private $filterEnabled;

    /**
     * @var bool|null
     */
    private $filterLocked;

    /**
     * Returns Filter Enabled.
     * When `true`, indicates that explicit content should not be played.
     */
    public function getFilterEnabled(): ?bool
    {
        return $this->filterEnabled;
    }

    /**
     * Sets Filter Enabled.
     * When `true`, indicates that explicit content should not be played.
     *
     * @maps filter_enabled
     */
    public function setFilterEnabled(?bool $filterEnabled): void
    {
        $this->filterEnabled = $filterEnabled;
    }

    /**
     * Returns Filter Locked.
     * When `true`, indicates that the explicit content setting is locked and can't be changed by the user.
     */
    public function getFilterLocked(): ?bool
    {
        return $this->filterLocked;
    }

    /**
     * Sets Filter Locked.
     * When `true`, indicates that the explicit content setting is locked and can't be changed by the user.
     *
     * @maps filter_locked
     */
    public function setFilterLocked(?bool $filterLocked): void
    {
        $this->filterLocked = $filterLocked;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->filterEnabled)) {
            $json['filter_enabled'] = $this->filterEnabled;
        }
        if (isset($this->filterLocked)) {
            $json['filter_locked']  = $this->filterLocked;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}

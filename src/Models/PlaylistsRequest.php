<?php

declare(strict_types=1);

/*
 * SpotifyWebAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SpotifyWebAPILib\Models;

use stdClass;

class PlaylistsRequest implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $name;

    /**
     * @var bool|null
     */
    private $public;

    /**
     * @var bool|null
     */
    private $collaborative;

    /**
     * @var string|null
     */
    private $description;

    /**
     * Returns Name.
     * The new name for the playlist, for example `"My New Playlist Title"`
     */
    public function getName(): ?string
    {
        return $this->name;
    }

    /**
     * Sets Name.
     * The new name for the playlist, for example `"My New Playlist Title"`
     *
     * @maps name
     */
    public function setName(?string $name): void
    {
        $this->name = $name;
    }

    /**
     * Returns Public.
     * If `true` the playlist will be public, if `false` it will be private.
     */
    public function getPublic(): ?bool
    {
        return $this->public;
    }

    /**
     * Sets Public.
     * If `true` the playlist will be public, if `false` it will be private.
     *
     * @maps public
     */
    public function setPublic(?bool $public): void
    {
        $this->public = $public;
    }

    /**
     * Returns Collaborative.
     * If `true`, the playlist will become collaborative and other users will be able to modify the
     * playlist in their Spotify client. <br/>
     * _**Note**: You can only set `collaborative` to `true` on non-public playlists._
     */
    public function getCollaborative(): ?bool
    {
        return $this->collaborative;
    }

    /**
     * Sets Collaborative.
     * If `true`, the playlist will become collaborative and other users will be able to modify the
     * playlist in their Spotify client. <br/>
     * _**Note**: You can only set `collaborative` to `true` on non-public playlists._
     *
     * @maps collaborative
     */
    public function setCollaborative(?bool $collaborative): void
    {
        $this->collaborative = $collaborative;
    }

    /**
     * Returns Description.
     * Value for playlist description as displayed in Spotify Clients and in the Web API.
     */
    public function getDescription(): ?string
    {
        return $this->description;
    }

    /**
     * Sets Description.
     * Value for playlist description as displayed in Spotify Clients and in the Web API.
     *
     * @maps description
     */
    public function setDescription(?string $description): void
    {
        $this->description = $description;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->name)) {
            $json['name']          = $this->name;
        }
        if (isset($this->public)) {
            $json['public']        = $this->public;
        }
        if (isset($this->collaborative)) {
            $json['collaborative'] = $this->collaborative;
        }
        if (isset($this->description)) {
            $json['description']   = $this->description;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}

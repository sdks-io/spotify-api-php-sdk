<?php

declare(strict_types=1);

/*
 * SpotifyWebAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SpotifyWebAPILib\Models\Builders;

use Core\Utils\CoreHelper;
use SpotifyWebAPILib\Models\ExplicitContentSettingsObject;
use SpotifyWebAPILib\Models\ExternalUrlObject;
use SpotifyWebAPILib\Models\FollowersObject;
use SpotifyWebAPILib\Models\PrivateUserObject;

/**
 * Builder for model PrivateUserObject
 *
 * @see PrivateUserObject
 */
class PrivateUserObjectBuilder
{
    /**
     * @var PrivateUserObject
     */
    private $instance;

    private function __construct(PrivateUserObject $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new private user object Builder object.
     */
    public static function init(): self
    {
        return new self(new PrivateUserObject());
    }

    /**
     * Sets country field.
     */
    public function country(?string $value): self
    {
        $this->instance->setCountry($value);
        return $this;
    }

    /**
     * Sets display name field.
     */
    public function displayName(?string $value): self
    {
        $this->instance->setDisplayName($value);
        return $this;
    }

    /**
     * Sets email field.
     */
    public function email(?string $value): self
    {
        $this->instance->setEmail($value);
        return $this;
    }

    /**
     * Sets explicit content field.
     */
    public function explicitContent(?ExplicitContentSettingsObject $value): self
    {
        $this->instance->setExplicitContent($value);
        return $this;
    }

    /**
     * Sets external urls field.
     */
    public function externalUrls(?ExternalUrlObject $value): self
    {
        $this->instance->setExternalUrls($value);
        return $this;
    }

    /**
     * Sets followers field.
     */
    public function followers(?FollowersObject $value): self
    {
        $this->instance->setFollowers($value);
        return $this;
    }

    /**
     * Sets href field.
     */
    public function href(?string $value): self
    {
        $this->instance->setHref($value);
        return $this;
    }

    /**
     * Sets id field.
     */
    public function id(?string $value): self
    {
        $this->instance->setId($value);
        return $this;
    }

    /**
     * Sets images field.
     */
    public function images(?array $value): self
    {
        $this->instance->setImages($value);
        return $this;
    }

    /**
     * Sets product field.
     */
    public function product(?string $value): self
    {
        $this->instance->setProduct($value);
        return $this;
    }

    /**
     * Sets type field.
     */
    public function type(?string $value): self
    {
        $this->instance->setType($value);
        return $this;
    }

    /**
     * Sets uri field.
     */
    public function uri(?string $value): self
    {
        $this->instance->setUri($value);
        return $this;
    }

    /**
     * Initializes a new private user object object.
     */
    public function build(): PrivateUserObject
    {
        return CoreHelper::clone($this->instance);
    }
}

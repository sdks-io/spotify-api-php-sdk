<?php

declare(strict_types=1);

/*
 * SpotifyWebAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SpotifyWebAPILib\Models\Builders;

use Core\Utils\CoreHelper;
use SpotifyWebAPILib\Models\AlbumRestrictionObject;
use SpotifyWebAPILib\Models\ArtistDiscographyAlbumObject;
use SpotifyWebAPILib\Models\ExternalUrlObject;

/**
 * Builder for model ArtistDiscographyAlbumObject
 *
 * @see ArtistDiscographyAlbumObject
 */
class ArtistDiscographyAlbumObjectBuilder
{
    /**
     * @var ArtistDiscographyAlbumObject
     */
    private $instance;

    private function __construct(ArtistDiscographyAlbumObject $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new artist discography album object Builder object.
     */
    public static function init(
        string $albumType,
        int $totalTracks,
        array $availableMarkets,
        ExternalUrlObject $externalUrls,
        string $href,
        string $id,
        array $images,
        string $name,
        string $releaseDate,
        string $releaseDatePrecision,
        string $type,
        string $uri,
        array $artists,
        string $albumGroup
    ): self {
        return new self(new ArtistDiscographyAlbumObject(
            $albumType,
            $totalTracks,
            $availableMarkets,
            $externalUrls,
            $href,
            $id,
            $images,
            $name,
            $releaseDate,
            $releaseDatePrecision,
            $type,
            $uri,
            $artists,
            $albumGroup
        ));
    }

    /**
     * Sets restrictions field.
     */
    public function restrictions(?AlbumRestrictionObject $value): self
    {
        $this->instance->setRestrictions($value);
        return $this;
    }

    /**
     * Initializes a new artist discography album object object.
     */
    public function build(): ArtistDiscographyAlbumObject
    {
        return CoreHelper::clone($this->instance);
    }
}

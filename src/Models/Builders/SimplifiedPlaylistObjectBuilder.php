<?php

declare(strict_types=1);

/*
 * SpotifyWebAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SpotifyWebAPILib\Models\Builders;

use Core\Utils\CoreHelper;
use SpotifyWebAPILib\Models\ExternalUrlObject;
use SpotifyWebAPILib\Models\PlaylistOwnerObject;
use SpotifyWebAPILib\Models\PlaylistTracksRefObject;
use SpotifyWebAPILib\Models\SimplifiedPlaylistObject;

/**
 * Builder for model SimplifiedPlaylistObject
 *
 * @see SimplifiedPlaylistObject
 */
class SimplifiedPlaylistObjectBuilder
{
    /**
     * @var SimplifiedPlaylistObject
     */
    private $instance;

    private function __construct(SimplifiedPlaylistObject $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new simplified playlist object Builder object.
     */
    public static function init(): self
    {
        return new self(new SimplifiedPlaylistObject());
    }

    /**
     * Sets collaborative field.
     */
    public function collaborative(?bool $value): self
    {
        $this->instance->setCollaborative($value);
        return $this;
    }

    /**
     * Sets description field.
     */
    public function description(?string $value): self
    {
        $this->instance->setDescription($value);
        return $this;
    }

    /**
     * Sets external urls field.
     */
    public function externalUrls(?ExternalUrlObject $value): self
    {
        $this->instance->setExternalUrls($value);
        return $this;
    }

    /**
     * Sets href field.
     */
    public function href(?string $value): self
    {
        $this->instance->setHref($value);
        return $this;
    }

    /**
     * Sets id field.
     */
    public function id(?string $value): self
    {
        $this->instance->setId($value);
        return $this;
    }

    /**
     * Sets images field.
     */
    public function images(?array $value): self
    {
        $this->instance->setImages($value);
        return $this;
    }

    /**
     * Sets name field.
     */
    public function name(?string $value): self
    {
        $this->instance->setName($value);
        return $this;
    }

    /**
     * Sets owner field.
     */
    public function owner(?PlaylistOwnerObject $value): self
    {
        $this->instance->setOwner($value);
        return $this;
    }

    /**
     * Sets public field.
     */
    public function public(?bool $value): self
    {
        $this->instance->setPublic($value);
        return $this;
    }

    /**
     * Sets snapshot id field.
     */
    public function snapshotId(?string $value): self
    {
        $this->instance->setSnapshotId($value);
        return $this;
    }

    /**
     * Sets tracks field.
     */
    public function tracks(?PlaylistTracksRefObject $value): self
    {
        $this->instance->setTracks($value);
        return $this;
    }

    /**
     * Sets type field.
     */
    public function type(?string $value): self
    {
        $this->instance->setType($value);
        return $this;
    }

    /**
     * Sets uri field.
     */
    public function uri(?string $value): self
    {
        $this->instance->setUri($value);
        return $this;
    }

    /**
     * Initializes a new simplified playlist object object.
     */
    public function build(): SimplifiedPlaylistObject
    {
        return CoreHelper::clone($this->instance);
    }
}

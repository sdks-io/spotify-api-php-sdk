<?php

declare(strict_types=1);

/*
 * SpotifyWebAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SpotifyWebAPILib\Models\Builders;

use Core\Utils\CoreHelper;
use SpotifyWebAPILib\Models\RecommendationSeedObject;

/**
 * Builder for model RecommendationSeedObject
 *
 * @see RecommendationSeedObject
 */
class RecommendationSeedObjectBuilder
{
    /**
     * @var RecommendationSeedObject
     */
    private $instance;

    private function __construct(RecommendationSeedObject $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new recommendation seed object Builder object.
     */
    public static function init(): self
    {
        return new self(new RecommendationSeedObject());
    }

    /**
     * Sets after filtering size field.
     */
    public function afterFilteringSize(?int $value): self
    {
        $this->instance->setAfterFilteringSize($value);
        return $this;
    }

    /**
     * Sets after relinking size field.
     */
    public function afterRelinkingSize(?int $value): self
    {
        $this->instance->setAfterRelinkingSize($value);
        return $this;
    }

    /**
     * Sets href field.
     */
    public function href(?string $value): self
    {
        $this->instance->setHref($value);
        return $this;
    }

    /**
     * Sets id field.
     */
    public function id(?string $value): self
    {
        $this->instance->setId($value);
        return $this;
    }

    /**
     * Sets initial pool size field.
     */
    public function initialPoolSize(?int $value): self
    {
        $this->instance->setInitialPoolSize($value);
        return $this;
    }

    /**
     * Sets type field.
     */
    public function type(?string $value): self
    {
        $this->instance->setType($value);
        return $this;
    }

    /**
     * Initializes a new recommendation seed object object.
     */
    public function build(): RecommendationSeedObject
    {
        return CoreHelper::clone($this->instance);
    }
}

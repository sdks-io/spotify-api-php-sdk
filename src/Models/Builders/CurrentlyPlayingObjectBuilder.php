<?php

declare(strict_types=1);

/*
 * SpotifyWebAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SpotifyWebAPILib\Models\Builders;

use Core\Utils\CoreHelper;
use SpotifyWebAPILib\Models\ContextObject;
use SpotifyWebAPILib\Models\CurrentlyPlayingObject;
use SpotifyWebAPILib\Models\DisallowsObject;

/**
 * Builder for model CurrentlyPlayingObject
 *
 * @see CurrentlyPlayingObject
 */
class CurrentlyPlayingObjectBuilder
{
    /**
     * @var CurrentlyPlayingObject
     */
    private $instance;

    private function __construct(CurrentlyPlayingObject $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new currently playing object Builder object.
     */
    public static function init(): self
    {
        return new self(new CurrentlyPlayingObject());
    }

    /**
     * Sets context field.
     */
    public function context(?ContextObject $value): self
    {
        $this->instance->setContext($value);
        return $this;
    }

    /**
     * Sets timestamp field.
     */
    public function timestamp(?int $value): self
    {
        $this->instance->setTimestamp($value);
        return $this;
    }

    /**
     * Sets progress ms field.
     */
    public function progressMs(?int $value): self
    {
        $this->instance->setProgressMs($value);
        return $this;
    }

    /**
     * Sets is playing field.
     */
    public function isPlaying(?bool $value): self
    {
        $this->instance->setIsPlaying($value);
        return $this;
    }

    /**
     * Sets item field.
     */
    public function item(?array $value): self
    {
        $this->instance->setItem($value);
        return $this;
    }

    /**
     * Sets currently playing type field.
     */
    public function currentlyPlayingType(?string $value): self
    {
        $this->instance->setCurrentlyPlayingType($value);
        return $this;
    }

    /**
     * Sets actions field.
     */
    public function actions(?DisallowsObject $value): self
    {
        $this->instance->setActions($value);
        return $this;
    }

    /**
     * Initializes a new currently playing object object.
     */
    public function build(): CurrentlyPlayingObject
    {
        return CoreHelper::clone($this->instance);
    }
}

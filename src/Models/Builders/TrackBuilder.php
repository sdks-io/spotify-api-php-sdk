<?php

declare(strict_types=1);

/*
 * SpotifyWebAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SpotifyWebAPILib\Models\Builders;

use Core\Utils\CoreHelper;
use SpotifyWebAPILib\Models\Track;

/**
 * Builder for model Track
 *
 * @see Track
 */
class TrackBuilder
{
    /**
     * @var Track
     */
    private $instance;

    private function __construct(Track $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new track Builder object.
     */
    public static function init(): self
    {
        return new self(new Track());
    }

    /**
     * Sets num samples field.
     */
    public function numSamples(?int $value): self
    {
        $this->instance->setNumSamples($value);
        return $this;
    }

    /**
     * Sets duration field.
     */
    public function duration(?float $value): self
    {
        $this->instance->setDuration($value);
        return $this;
    }

    /**
     * Sets sample md 5 field.
     */
    public function sampleMd5(?string $value): self
    {
        $this->instance->setSampleMd5($value);
        return $this;
    }

    /**
     * Sets offset seconds field.
     */
    public function offsetSeconds(?int $value): self
    {
        $this->instance->setOffsetSeconds($value);
        return $this;
    }

    /**
     * Sets window seconds field.
     */
    public function windowSeconds(?int $value): self
    {
        $this->instance->setWindowSeconds($value);
        return $this;
    }

    /**
     * Sets analysis sample rate field.
     */
    public function analysisSampleRate(?int $value): self
    {
        $this->instance->setAnalysisSampleRate($value);
        return $this;
    }

    /**
     * Sets analysis channels field.
     */
    public function analysisChannels(?int $value): self
    {
        $this->instance->setAnalysisChannels($value);
        return $this;
    }

    /**
     * Sets end of fade in field.
     */
    public function endOfFadeIn(?float $value): self
    {
        $this->instance->setEndOfFadeIn($value);
        return $this;
    }

    /**
     * Sets start of fade out field.
     */
    public function startOfFadeOut(?float $value): self
    {
        $this->instance->setStartOfFadeOut($value);
        return $this;
    }

    /**
     * Sets loudness field.
     */
    public function loudness(?float $value): self
    {
        $this->instance->setLoudness($value);
        return $this;
    }

    /**
     * Sets tempo field.
     */
    public function tempo(?float $value): self
    {
        $this->instance->setTempo($value);
        return $this;
    }

    /**
     * Sets tempo confidence field.
     */
    public function tempoConfidence(?float $value): self
    {
        $this->instance->setTempoConfidence($value);
        return $this;
    }

    /**
     * Sets time signature field.
     */
    public function timeSignature(?int $value): self
    {
        $this->instance->setTimeSignature($value);
        return $this;
    }

    /**
     * Sets time signature confidence field.
     */
    public function timeSignatureConfidence(?float $value): self
    {
        $this->instance->setTimeSignatureConfidence($value);
        return $this;
    }

    /**
     * Sets key field.
     */
    public function key(?int $value): self
    {
        $this->instance->setKey($value);
        return $this;
    }

    /**
     * Sets key confidence field.
     */
    public function keyConfidence(?float $value): self
    {
        $this->instance->setKeyConfidence($value);
        return $this;
    }

    /**
     * Sets mode field.
     */
    public function mode(?int $value): self
    {
        $this->instance->setMode($value);
        return $this;
    }

    /**
     * Sets mode confidence field.
     */
    public function modeConfidence(?float $value): self
    {
        $this->instance->setModeConfidence($value);
        return $this;
    }

    /**
     * Sets codestring field.
     */
    public function codestring(?string $value): self
    {
        $this->instance->setCodestring($value);
        return $this;
    }

    /**
     * Sets code version field.
     */
    public function codeVersion(?float $value): self
    {
        $this->instance->setCodeVersion($value);
        return $this;
    }

    /**
     * Sets echoprintstring field.
     */
    public function echoprintstring(?string $value): self
    {
        $this->instance->setEchoprintstring($value);
        return $this;
    }

    /**
     * Sets echoprint version field.
     */
    public function echoprintVersion(?float $value): self
    {
        $this->instance->setEchoprintVersion($value);
        return $this;
    }

    /**
     * Sets synchstring field.
     */
    public function synchstring(?string $value): self
    {
        $this->instance->setSynchstring($value);
        return $this;
    }

    /**
     * Sets synch version field.
     */
    public function synchVersion(?float $value): self
    {
        $this->instance->setSynchVersion($value);
        return $this;
    }

    /**
     * Sets rhythmstring field.
     */
    public function rhythmstring(?string $value): self
    {
        $this->instance->setRhythmstring($value);
        return $this;
    }

    /**
     * Sets rhythm version field.
     */
    public function rhythmVersion(?float $value): self
    {
        $this->instance->setRhythmVersion($value);
        return $this;
    }

    /**
     * Initializes a new track object.
     */
    public function build(): Track
    {
        return CoreHelper::clone($this->instance);
    }
}

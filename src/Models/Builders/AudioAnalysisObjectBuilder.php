<?php

declare(strict_types=1);

/*
 * SpotifyWebAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SpotifyWebAPILib\Models\Builders;

use Core\Utils\CoreHelper;
use SpotifyWebAPILib\Models\AudioAnalysisObject;
use SpotifyWebAPILib\Models\Meta;
use SpotifyWebAPILib\Models\Track;

/**
 * Builder for model AudioAnalysisObject
 *
 * @see AudioAnalysisObject
 */
class AudioAnalysisObjectBuilder
{
    /**
     * @var AudioAnalysisObject
     */
    private $instance;

    private function __construct(AudioAnalysisObject $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new audio analysis object Builder object.
     */
    public static function init(): self
    {
        return new self(new AudioAnalysisObject());
    }

    /**
     * Sets meta field.
     */
    public function meta(?Meta $value): self
    {
        $this->instance->setMeta($value);
        return $this;
    }

    /**
     * Sets track field.
     */
    public function track(?Track $value): self
    {
        $this->instance->setTrack($value);
        return $this;
    }

    /**
     * Sets bars field.
     */
    public function bars(?array $value): self
    {
        $this->instance->setBars($value);
        return $this;
    }

    /**
     * Sets beats field.
     */
    public function beats(?array $value): self
    {
        $this->instance->setBeats($value);
        return $this;
    }

    /**
     * Sets sections field.
     */
    public function sections(?array $value): self
    {
        $this->instance->setSections($value);
        return $this;
    }

    /**
     * Sets segments field.
     */
    public function segments(?array $value): self
    {
        $this->instance->setSegments($value);
        return $this;
    }

    /**
     * Sets tatums field.
     */
    public function tatums(?array $value): self
    {
        $this->instance->setTatums($value);
        return $this;
    }

    /**
     * Initializes a new audio analysis object object.
     */
    public function build(): AudioAnalysisObject
    {
        return CoreHelper::clone($this->instance);
    }
}

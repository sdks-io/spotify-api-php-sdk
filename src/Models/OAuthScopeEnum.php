<?php

declare(strict_types=1);

/*
 * SpotifyWebAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SpotifyWebAPILib\Models;

use Core\Utils\CoreHelper;
use Exception;
use stdClass;

/**
 * OAuth 2 scopes supported by the API
 */
class OAuthScopeEnum
{
    /**
     * Communicate with the Spotify app on your device.
     *
     */
    public const APP_REMOTE_CONTROL = 'app-remote-control';

    /**
     * Access your private playlists.
     *
     */
    public const PLAYLIST_READ_PRIVATE = 'playlist-read-private';

    /**
     * Access your collaborative playlists.
     *
     */
    public const PLAYLIST_READ_COLLABORATIVE = 'playlist-read-collaborative';

    /**
     * Manage your public playlists.
     *
     */
    public const PLAYLIST_MODIFY_PUBLIC = 'playlist-modify-public';

    /**
     * Manage your private playlists.
     *
     */
    public const PLAYLIST_MODIFY_PRIVATE = 'playlist-modify-private';

    /**
     * Access your saved content.
     *
     */
    public const USER_LIBRARY_READ = 'user-library-read';

    /**
     * Manage your saved content.
     *
     */
    public const USER_LIBRARY_MODIFY = 'user-library-modify';

    /**
     * Access your subscription details.
     *
     */
    public const USER_READ_PRIVATE = 'user-read-private';

    /**
     * Get your real email address.
     *
     */
    public const USER_READ_EMAIL = 'user-read-email';

    /**
     * Access your followers and who you are following.
     *
     */
    public const USER_FOLLOW_READ = 'user-follow-read';

    /**
     * Manage your saved content.
     *
     */
    public const USER_FOLLOW_MODIFY = 'user-follow-modify';

    /**
     * Read your top artists and content.
     *
     */
    public const USER_TOP_READ = 'user-top-read';

    /**
     * Read your position in content you have played.
     *
     */
    public const USER_READ_PLAYBACK_POSITION = 'user-read-playback-position';

    /**
     * Read your currently playing content and Spotify Connect devices information.
     *
     */
    public const USER_READ_PLAYBACK_STATE = 'user-read-playback-state';

    /**
     * Access your recently played items.
     *
     */
    public const USER_READ_RECENTLY_PLAYED = 'user-read-recently-played';

    /**
     * Read your currently playing content.
     *
     */
    public const USER_READ_CURRENTLY_PLAYING = 'user-read-currently-playing';

    /**
     * Control playback on your Spotify clients and Spotify Connect devices.
     *
     */
    public const USER_MODIFY_PLAYBACK_STATE = 'user-modify-playback-state';

    /**
     * Upload images to Spotify on your behalf.
     *
     */
    public const UGC_IMAGE_UPLOAD = 'ugc-image-upload';

    /**
     * Play content and control playback on your other devices.
     *
     */
    public const STREAMING = 'streaming';

    private const _ALL_VALUES = [
        self::APP_REMOTE_CONTROL,
        self::PLAYLIST_READ_PRIVATE,
        self::PLAYLIST_READ_COLLABORATIVE,
        self::PLAYLIST_MODIFY_PUBLIC,
        self::PLAYLIST_MODIFY_PRIVATE,
        self::USER_LIBRARY_READ,
        self::USER_LIBRARY_MODIFY,
        self::USER_READ_PRIVATE,
        self::USER_READ_EMAIL,
        self::USER_FOLLOW_READ,
        self::USER_FOLLOW_MODIFY,
        self::USER_TOP_READ,
        self::USER_READ_PLAYBACK_POSITION,
        self::USER_READ_PLAYBACK_STATE,
        self::USER_READ_RECENTLY_PLAYED,
        self::USER_READ_CURRENTLY_PLAYING,
        self::USER_MODIFY_PLAYBACK_STATE,
        self::UGC_IMAGE_UPLOAD,
        self::STREAMING
    ];

    /**
     * Ensures that all the given values are present in this Enum.
     *
     * @param array|stdClass|null|string $value Value or a list/map of values to be checked
     *
     * @return array|null|string Input value(s), if all are a part of this Enum
     *
     * @throws Exception Throws exception if any given value is not in this Enum
     */
    public static function checkValue($value)
    {
        $value = json_decode(json_encode($value), true); // converts stdClass into array
        if (CoreHelper::checkValueOrValuesInList($value, self::_ALL_VALUES)) {
            return $value;
        }
        throw new Exception("$value is invalid for OAuthScopeEnum.");
    }
}

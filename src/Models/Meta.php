<?php

declare(strict_types=1);

/*
 * SpotifyWebAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SpotifyWebAPILib\Models;

use stdClass;

class Meta implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $analyzerVersion;

    /**
     * @var string|null
     */
    private $platform;

    /**
     * @var string|null
     */
    private $detailedStatus;

    /**
     * @var int|null
     */
    private $statusCode;

    /**
     * @var int|null
     */
    private $timestamp;

    /**
     * @var float|null
     */
    private $analysisTime;

    /**
     * @var string|null
     */
    private $inputProcess;

    /**
     * Returns Analyzer Version.
     * The version of the Analyzer used to analyze this track.
     */
    public function getAnalyzerVersion(): ?string
    {
        return $this->analyzerVersion;
    }

    /**
     * Sets Analyzer Version.
     * The version of the Analyzer used to analyze this track.
     *
     * @maps analyzer_version
     */
    public function setAnalyzerVersion(?string $analyzerVersion): void
    {
        $this->analyzerVersion = $analyzerVersion;
    }

    /**
     * Returns Platform.
     * The platform used to read the track's audio data.
     */
    public function getPlatform(): ?string
    {
        return $this->platform;
    }

    /**
     * Sets Platform.
     * The platform used to read the track's audio data.
     *
     * @maps platform
     */
    public function setPlatform(?string $platform): void
    {
        $this->platform = $platform;
    }

    /**
     * Returns Detailed Status.
     * A detailed status code for this track. If analysis data is missing, this code may explain why.
     */
    public function getDetailedStatus(): ?string
    {
        return $this->detailedStatus;
    }

    /**
     * Sets Detailed Status.
     * A detailed status code for this track. If analysis data is missing, this code may explain why.
     *
     * @maps detailed_status
     */
    public function setDetailedStatus(?string $detailedStatus): void
    {
        $this->detailedStatus = $detailedStatus;
    }

    /**
     * Returns Status Code.
     * The return code of the analyzer process. 0 if successful, 1 if any errors occurred.
     */
    public function getStatusCode(): ?int
    {
        return $this->statusCode;
    }

    /**
     * Sets Status Code.
     * The return code of the analyzer process. 0 if successful, 1 if any errors occurred.
     *
     * @maps status_code
     */
    public function setStatusCode(?int $statusCode): void
    {
        $this->statusCode = $statusCode;
    }

    /**
     * Returns Timestamp.
     * The Unix timestamp (in seconds) at which this track was analyzed.
     */
    public function getTimestamp(): ?int
    {
        return $this->timestamp;
    }

    /**
     * Sets Timestamp.
     * The Unix timestamp (in seconds) at which this track was analyzed.
     *
     * @maps timestamp
     */
    public function setTimestamp(?int $timestamp): void
    {
        $this->timestamp = $timestamp;
    }

    /**
     * Returns Analysis Time.
     * The amount of time taken to analyze this track.
     */
    public function getAnalysisTime(): ?float
    {
        return $this->analysisTime;
    }

    /**
     * Sets Analysis Time.
     * The amount of time taken to analyze this track.
     *
     * @maps analysis_time
     */
    public function setAnalysisTime(?float $analysisTime): void
    {
        $this->analysisTime = $analysisTime;
    }

    /**
     * Returns Input Process.
     * The method used to read the track's audio data.
     */
    public function getInputProcess(): ?string
    {
        return $this->inputProcess;
    }

    /**
     * Sets Input Process.
     * The method used to read the track's audio data.
     *
     * @maps input_process
     */
    public function setInputProcess(?string $inputProcess): void
    {
        $this->inputProcess = $inputProcess;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->analyzerVersion)) {
            $json['analyzer_version'] = $this->analyzerVersion;
        }
        if (isset($this->platform)) {
            $json['platform']         = $this->platform;
        }
        if (isset($this->detailedStatus)) {
            $json['detailed_status']  = $this->detailedStatus;
        }
        if (isset($this->statusCode)) {
            $json['status_code']      = $this->statusCode;
        }
        if (isset($this->timestamp)) {
            $json['timestamp']        = $this->timestamp;
        }
        if (isset($this->analysisTime)) {
            $json['analysis_time']    = $this->analysisTime;
        }
        if (isset($this->inputProcess)) {
            $json['input_process']    = $this->inputProcess;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}

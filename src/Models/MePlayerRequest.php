<?php

declare(strict_types=1);

/*
 * SpotifyWebAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SpotifyWebAPILib\Models;

use stdClass;

class MePlayerRequest implements \JsonSerializable
{
    /**
     * @var string[]
     */
    private $deviceIds;

    /**
     * @var bool|null
     */
    private $play;

    /**
     * @param string[] $deviceIds
     */
    public function __construct(array $deviceIds)
    {
        $this->deviceIds = $deviceIds;
    }

    /**
     * Returns Device Ids.
     * A JSON array containing the ID of the device on which playback should be started/transferred.
     * <br/>For example:`{device_ids:["74ASZWbe4lXaubB36ztrGX"]}`<br/>_**Note**: Although an array is
     * accepted, only a single device_id is currently supported. Supplying more than one will return `400
     * Bad Request`_
     *
     * @return string[]
     */
    public function getDeviceIds(): array
    {
        return $this->deviceIds;
    }

    /**
     * Sets Device Ids.
     * A JSON array containing the ID of the device on which playback should be started/transferred.
     * <br/>For example:`{device_ids:["74ASZWbe4lXaubB36ztrGX"]}`<br/>_**Note**: Although an array is
     * accepted, only a single device_id is currently supported. Supplying more than one will return `400
     * Bad Request`_
     *
     * @required
     * @maps device_ids
     *
     * @param string[] $deviceIds
     */
    public function setDeviceIds(array $deviceIds): void
    {
        $this->deviceIds = $deviceIds;
    }

    /**
     * Returns Play.
     * **true**: ensure playback happens on new device.<br/>**false** or not provided: keep the current
     * playback state.
     */
    public function getPlay(): ?bool
    {
        return $this->play;
    }

    /**
     * Sets Play.
     * **true**: ensure playback happens on new device.<br/>**false** or not provided: keep the current
     * playback state.
     *
     * @maps play
     */
    public function setPlay(?bool $play): void
    {
        $this->play = $play;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['device_ids'] = $this->deviceIds;
        if (isset($this->play)) {
            $json['play']   = $this->play;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}

<?php

declare(strict_types=1);

/*
 * SpotifyWebAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SpotifyWebAPILib\Models;

use stdClass;

class QueueObject implements \JsonSerializable
{
    /**
     * @var array|null
     */
    private $currentlyPlaying;

    /**
     * @var array[]|null
     */
    private $queue;

    /**
     * Returns Currently Playing.
     * The currently playing track or episode. Can be `null`.
     */
    public function getCurrentlyPlaying(): ?array
    {
        return $this->currentlyPlaying;
    }

    /**
     * Sets Currently Playing.
     * The currently playing track or episode. Can be `null`.
     *
     * @maps currently_playing
     */
    public function setCurrentlyPlaying(?array $currentlyPlaying): void
    {
        $this->currentlyPlaying = $currentlyPlaying;
    }

    /**
     * Returns Queue.
     * The tracks or episodes in the queue. Can be empty.
     *
     * @return array[]|null
     */
    public function getQueue(): ?array
    {
        return $this->queue;
    }

    /**
     * Sets Queue.
     * The tracks or episodes in the queue. Can be empty.
     *
     * @maps queue
     *
     * @param array[]|null $queue
     */
    public function setQueue(?array $queue): void
    {
        $this->queue = $queue;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->currentlyPlaying)) {
            $json['currently_playing'] = $this->currentlyPlaying;
        }
        if (isset($this->queue)) {
            $json['queue']             = $this->queue;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}

<?php

declare(strict_types=1);

/*
 * SpotifyWebAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SpotifyWebAPILib\Models;

use stdClass;

class PlaylistsTracksRequest implements \JsonSerializable
{
    /**
     * @var string[]|null
     */
    private $uris;

    /**
     * @var int|null
     */
    private $position;

    /**
     * Returns Uris.
     * A JSON array of the [Spotify URIs](/documentation/web-api/concepts/spotify-uris-ids) to add. For
     * example: `{"uris": ["spotify:track:4iV5W9uYEdYUVa79Axb7Rh","spotify:track:1301WleyT98MSxVHPZCA6M",
     * "spotify:episode:512ojhOuo1ktJprKbVcKyQ"]}`<br/>A maximum of 100 items can be added in one request.
     * _**Note**: if the `uris` parameter is present in the query string, any URIs listed here in the body
     * will be ignored._
     *
     * @return string[]|null
     */
    public function getUris(): ?array
    {
        return $this->uris;
    }

    /**
     * Sets Uris.
     * A JSON array of the [Spotify URIs](/documentation/web-api/concepts/spotify-uris-ids) to add. For
     * example: `{"uris": ["spotify:track:4iV5W9uYEdYUVa79Axb7Rh","spotify:track:1301WleyT98MSxVHPZCA6M",
     * "spotify:episode:512ojhOuo1ktJprKbVcKyQ"]}`<br/>A maximum of 100 items can be added in one request.
     * _**Note**: if the `uris` parameter is present in the query string, any URIs listed here in the body
     * will be ignored._
     *
     * @maps uris
     *
     * @param string[]|null $uris
     */
    public function setUris(?array $uris): void
    {
        $this->uris = $uris;
    }

    /**
     * Returns Position.
     * The position to insert the items, a zero-based index. For example, to insert the items in the first
     * position: `position=0` ; to insert the items in the third position: `position=2`. If omitted, the
     * items will be appended to the playlist. Items are added in the order they appear in the uris array.
     * For example: `{"uris": ["spotify:track:4iV5W9uYEdYUVa79Axb7Rh","spotify:track:
     * 1301WleyT98MSxVHPZCA6M"], "position": 3}`
     */
    public function getPosition(): ?int
    {
        return $this->position;
    }

    /**
     * Sets Position.
     * The position to insert the items, a zero-based index. For example, to insert the items in the first
     * position: `position=0` ; to insert the items in the third position: `position=2`. If omitted, the
     * items will be appended to the playlist. Items are added in the order they appear in the uris array.
     * For example: `{"uris": ["spotify:track:4iV5W9uYEdYUVa79Axb7Rh","spotify:track:
     * 1301WleyT98MSxVHPZCA6M"], "position": 3}`
     *
     * @maps position
     */
    public function setPosition(?int $position): void
    {
        $this->position = $position;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->uris)) {
            $json['uris']     = $this->uris;
        }
        if (isset($this->position)) {
            $json['position'] = $this->position;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
